service: sms-messenger
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: prod
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sns:Publish
          Resource: !GetAtt smsLambda.Arn
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: !GetAtt broadCastSNS.Arn
        - Effect: Allow
          Action:
            - sns:publish
            - sqs:ReceiveMessage
          Resource: !GetAtt sqsHandler.arn
resources:
  Resources:
    broadCastSNS:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: broadcast-sns
        TopicName: broadcast-sns
    smsSqs:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: smsQueue
    SNSBroadCastSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref broadCastSNS
        Protocol: sqs
        Endpoint: !Ref smsSqs
functions:
  smsLambda:
    handler: src/handlers/smsHandler.smsSend
    events:
      - httpApi:
          method: POST
          path: /sms/send
    lambda:
        destinations:
        onSuccess: 
        type: sns
        arn: !Ref broadCastSNS
    environment:
      SNS_BRODCAST_ARN: !Ref broadCastSNS
  sqsHandler:
    handler: src/handlers/sqsHandler.process
    events:
      - sqs:
          arn: !GetAtt smsSqs.Arn
          batchSize: 1
plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: false
    packager: 'yarn'
